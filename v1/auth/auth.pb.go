// Code generated by protoc-gen-go. DO NOT EDIT.
// source: command-line-arguments/all.proto

package auth

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GrantType defines the grant type when requesting a token.
type GrantType int32

const (
	GrantType__ GrantType = 0
	// GrantType_AuthorizationCode is the grant type used to exchange an authorization code with an access token.
	GrantType_AuthorizationCode GrantType = 1
	// GrantType_RefreshToken is the grant type used to refresh an access token.
	GrantType_RefreshToken GrantType = 2
)

var GrantType_name = map[int32]string{
	0: "_",
	1: "AuthorizationCode",
	2: "RefreshToken",
}

var GrantType_value = map[string]int32{
	"_":                 0,
	"AuthorizationCode": 1,
	"RefreshToken":      2,
}

func (x GrantType) String() string {
	return proto.EnumName(GrantType_name, int32(x))
}

func (GrantType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{0}
}

// GetAuthorizationCodeRequest is the request envelope to retrieve an authorization code.
type GetAuthorizationCodeRequest struct {
	// ClientID is your identifier provided during the registration process.
	ClientID string `protobuf:"bytes,1,opt,name=ClientID,json=client_id,proto3" json:"ClientID,omitempty"`
	// RedirectURI must match one of the URLs you have provided during the registration process.
	RedirectURI          string   `protobuf:"bytes,2,opt,name=RedirectURI,json=redirect_uri,proto3" json:"RedirectURI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAuthorizationCodeRequest) Reset()         { *m = GetAuthorizationCodeRequest{} }
func (m *GetAuthorizationCodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetAuthorizationCodeRequest) ProtoMessage()    {}
func (*GetAuthorizationCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{0}
}

func (m *GetAuthorizationCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAuthorizationCodeRequest.Unmarshal(m, b)
}
func (m *GetAuthorizationCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAuthorizationCodeRequest.Marshal(b, m, deterministic)
}
func (m *GetAuthorizationCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAuthorizationCodeRequest.Merge(m, src)
}
func (m *GetAuthorizationCodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetAuthorizationCodeRequest.Size(m)
}
func (m *GetAuthorizationCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAuthorizationCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAuthorizationCodeRequest proto.InternalMessageInfo

func (m *GetAuthorizationCodeRequest) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *GetAuthorizationCodeRequest) GetRedirectURI() string {
	if m != nil {
		return m.RedirectURI
	}
	return ""
}

// Empty is an empty response.
type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// CreateAccessTokenRequest is the request evelope to either exchange an authorization code with an access token or refresh a token.
type CreateAccessTokenRequest struct {
	// GrantType is an enum to defines which operation to perform.
	GrantType GrantType `protobuf:"varint,1,opt,name=GrantType,json=grant_type,proto3,enum=auth.GrantType" json:"GrantType,omitempty"`
	// Code is the authorization code previously received from the authorization server.
	Code string `protobuf:"bytes,2,opt,name=Code,json=code,proto3" json:"Code,omitempty"`
	// RedirectURI must match RedirectURI you have provided for the autorization code request.
	//Required only when GrantType is equal to "authorization_code".
	RedirectURI string `protobuf:"bytes,3,opt,name=RedirectURI,json=redirect_uri,proto3" json:"RedirectURI,omitempty"`
	// RefreshToken is the refresh token previously issued to the client.
	//Required only when GrantType is equal to "refresh_token"
	RefreshToken         string   `protobuf:"bytes,4,opt,name=RefreshToken,json=refresh_token,proto3" json:"RefreshToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccessTokenRequest) Reset()         { *m = CreateAccessTokenRequest{} }
func (m *CreateAccessTokenRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccessTokenRequest) ProtoMessage()    {}
func (*CreateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{2}
}

func (m *CreateAccessTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccessTokenRequest.Unmarshal(m, b)
}
func (m *CreateAccessTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccessTokenRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccessTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccessTokenRequest.Merge(m, src)
}
func (m *CreateAccessTokenRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccessTokenRequest.Size(m)
}
func (m *CreateAccessTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccessTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccessTokenRequest proto.InternalMessageInfo

func (m *CreateAccessTokenRequest) GetGrantType() GrantType {
	if m != nil {
		return m.GrantType
	}
	return GrantType__
}

func (m *CreateAccessTokenRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CreateAccessTokenRequest) GetRedirectURI() string {
	if m != nil {
		return m.RedirectURI
	}
	return ""
}

func (m *CreateAccessTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

// CreateAccessTokenResponse is the response envelope containing the access token.
type CreateAccessTokenResponse struct {
	// AccessToken issued by the authorization server.
	AccessToken string `protobuf:"bytes,1,opt,name=AccessToken,json=access_token,proto3" json:"AccessToken,omitempty"`
	// TokenType is the type of the token, always "bearer".
	TokenType string `protobuf:"bytes,2,opt,name=TokenType,json=token_type,proto3" json:"TokenType,omitempty"`
	// ExpiresIn is the duration in seconds that the access token remains valid.
	ExpiresIn int32 `protobuf:"varint,3,opt,name=ExpiresIn,json=expires_in,proto3" json:"ExpiresIn,omitempty"`
	// RefreshToken is the token to renew an expired access token.
	RefreshToken         string   `protobuf:"bytes,4,opt,name=RefreshToken,json=refresh_token,proto3" json:"RefreshToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAccessTokenResponse) Reset()         { *m = CreateAccessTokenResponse{} }
func (m *CreateAccessTokenResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAccessTokenResponse) ProtoMessage()    {}
func (*CreateAccessTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e5090b41d9b9746, []int{3}
}

func (m *CreateAccessTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccessTokenResponse.Unmarshal(m, b)
}
func (m *CreateAccessTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccessTokenResponse.Marshal(b, m, deterministic)
}
func (m *CreateAccessTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccessTokenResponse.Merge(m, src)
}
func (m *CreateAccessTokenResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAccessTokenResponse.Size(m)
}
func (m *CreateAccessTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccessTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccessTokenResponse proto.InternalMessageInfo

func (m *CreateAccessTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *CreateAccessTokenResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *CreateAccessTokenResponse) GetExpiresIn() int32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func (m *CreateAccessTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("auth.GrantType", GrantType_name, GrantType_value)
	proto.RegisterType((*GetAuthorizationCodeRequest)(nil), "auth.GetAuthorizationCodeRequest")
	proto.RegisterType((*Empty)(nil), "auth.Empty")
	proto.RegisterType((*CreateAccessTokenRequest)(nil), "auth.CreateAccessTokenRequest")
	proto.RegisterType((*CreateAccessTokenResponse)(nil), "auth.CreateAccessTokenResponse")
}

func init() { proto.RegisterFile("command-line-arguments/all.proto", fileDescriptor_4e5090b41d9b9746) }

var fileDescriptor_4e5090b41d9b9746 = []byte{
	// 1013 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0x4d, 0x6f, 0x1b, 0x45,
	0x18, 0xc7, 0x67, 0xd7, 0x49, 0x65, 0x4f, 0xd3, 0x36, 0x1d, 0xe5, 0xe0, 0x18, 0x94, 0x0e, 0xe6,
	0x90, 0x36, 0xc4, 0xeb, 0x97, 0xc2, 0x25, 0x12, 0x42, 0x6e, 0x48, 0x83, 0x0b, 0x87, 0xb0, 0x04,
	0x54, 0x71, 0xb1, 0x26, 0xbb, 0x4f, 0xbc, 0x43, 0xd7, 0x33, 0xcb, 0xcc, 0xac, 0x13, 0x23, 0x21,
	0xa1, 0x9e, 0x72, 0xe0, 0x50, 0x85, 0x13, 0x5f, 0x80, 0xcf, 0xc0, 0xa7, 0x40, 0x48, 0x5c, 0xe0,
	0x02, 0x12, 0xe2, 0x1b, 0xc0, 0x01, 0x89, 0x0b, 0x9a, 0x59, 0xd7, 0x89, 0xe3, 0xa4, 0x95, 0x7a,
	0x8a, 0x34, 0xcf, 0xff, 0x79, 0xf9, 0xff, 0x9e, 0x27, 0x5e, 0x4c, 0x23, 0x39, 0x1c, 0x32, 0x11,
	0x37, 0x52, 0x2e, 0xa0, 0xc1, 0xd4, 0x20, 0x1f, 0x82, 0x30, 0xba, 0xc9, 0xd2, 0x34, 0xc8, 0x94,
	0x34, 0x92, 0x2c, 0xb0, 0xdc, 0x24, 0xb5, 0xd7, 0x07, 0x52, 0x0e, 0x52, 0x68, 0xb2, 0x8c, 0x37,
	0x99, 0x10, 0xd2, 0x30, 0xc3, 0xa5, 0xd0, 0x85, 0xa6, 0xb6, 0xe9, 0xfe, 0x44, 0x8d, 0x01, 0x88,
	0x86, 0x3e, 0x62, 0x83, 0x01, 0xa8, 0xa6, 0xcc, 0x9c, 0x62, 0x5e, 0x5d, 0xff, 0x1a, 0xbf, 0xb6,
	0x0b, 0xa6, 0x9b, 0x9b, 0x44, 0x2a, 0xfe, 0x95, 0x0b, 0x6d, 0xcb, 0x18, 0x42, 0xf8, 0x32, 0x07,
	0x6d, 0xc8, 0x3a, 0x2e, 0x6f, 0xa7, 0x1c, 0x84, 0xe9, 0xbd, 0x5f, 0xf5, 0xa8, 0x77, 0xb7, 0xf2,
	0x00, 0x97, 0x51, 0x15, 0xdd, 0x45, 0x2d, 0xb4, 0x87, 0xc2, 0x4a, 0xe4, 0x62, 0x7d, 0x1e, 0x93,
	0x06, 0xbe, 0x1e, 0x42, 0xcc, 0x15, 0x44, 0xe6, 0xd3, 0xb0, 0x57, 0xf5, 0xe7, 0xb4, 0x4b, 0x6a,
	0x12, 0xee, 0xe7, 0x8a, 0x6f, 0x5d, 0x2b, 0xa3, 0x65, 0x54, 0x45, 0xf5, 0x5b, 0x78, 0x71, 0x67,
	0x98, 0x99, 0xf1, 0xf4, 0xe1, 0x77, 0x0f, 0x57, 0xb7, 0x15, 0x30, 0x03, 0xdd, 0x28, 0x02, 0xad,
	0xf7, 0xe5, 0x13, 0x10, 0xcf, 0xa7, 0xd9, 0xc2, 0x95, 0x5d, 0xc5, 0x84, 0xd9, 0x1f, 0x67, 0xe0,
	0xc6, 0xb9, 0xd9, 0xb9, 0x15, 0x58, 0x24, 0xc1, 0xf4, 0x79, 0xa6, 0x27, 0x1e, 0xd8, 0xe7, 0xbe,
	0x19, 0x67, 0x40, 0xd6, 0xf0, 0x82, 0x35, 0x76, 0xc9, 0x64, 0x0b, 0x91, 0x8c, 0xe1, 0xa2, 0x81,
	0xd2, 0x8b, 0x0d, 0x90, 0x26, 0x5e, 0x0a, 0xe1, 0x50, 0x81, 0x4e, 0xdc, 0x84, 0xd5, 0x85, 0x39,
	0xfd, 0x0d, 0x55, 0xc4, 0xfb, 0xc6, 0x0a, 0xa6, 0x06, 0x7f, 0xf3, 0xf0, 0xea, 0x25, 0x06, 0x75,
	0x26, 0x85, 0x76, 0x53, 0x9c, 0x7b, 0xbe, 0x04, 0xf9, 0x12, 0x73, 0xe1, 0xa2, 0x28, 0xb9, 0x87,
	0x2b, 0x4e, 0xe8, 0x80, 0xcc, 0x3b, 0xc3, 0x4e, 0x55, 0xf8, 0xbf, 0x87, 0x2b, 0x3b, 0xc7, 0x19,
	0x57, 0xa0, 0x7b, 0xc2, 0xb9, 0x5b, 0x9c, 0x95, 0x42, 0x11, 0xec, 0x73, 0xf1, 0xca, 0xde, 0x36,
	0x3e, 0x3c, 0xb7, 0x1f, 0x52, 0xc1, 0x5e, 0x7f, 0x19, 0xd5, 0xfc, 0x32, 0x22, 0xab, 0xf8, 0xf6,
	0xdc, 0x85, 0x2d, 0x7b, 0x2e, 0xb4, 0x32, 0xdb, 0x6b, 0xd9, 0xb7, 0xaf, 0x35, 0xbf, 0x8a, 0x3a,
	0x27, 0x8b, 0x78, 0x65, 0x26, 0xeb, 0x13, 0x50, 0x23, 0x1e, 0x01, 0xf9, 0xdb, 0xc3, 0x2b, 0x97,
	0xdd, 0x2c, 0x79, 0x63, 0x72, 0x0b, 0x57, 0xdf, 0x73, 0xed, 0x7a, 0x21, 0x71, 0x37, 0x57, 0xff,
	0xc1, 0x3b, 0xed, 0x7e, 0xeb, 0xe1, 0x1b, 0x33, 0x6a, 0x72, 0x27, 0x04, 0xa3, 0x38, 0x8c, 0x80,
	0x32, 0x41, 0xd9, 0xf9, 0x10, 0xb5, 0x87, 0x12, 0xd4, 0xda, 0x0f, 0xb9, 0xd2, 0x86, 0x8e, 0x65,
	0x4e, 0x05, 0x40, 0x4c, 0x8d, 0xa4, 0xea, 0xc5, 0x29, 0x8f, 0xd6, 0x71, 0xa9, 0xd3, 0x6a, 0x11,
	0x8a, 0xd7, 0x26, 0x83, 0x50, 0x38, 0x86, 0x28, 0x37, 0x10, 0x53, 0x9d, 0xbb, 0x85, 0x1e, 0xe6,
	0x69, 0x3a, 0x0e, 0x9e, 0xfe, 0xf2, 0xd7, 0x77, 0x3e, 0x26, 0xe5, 0xe6, 0xa8, 0xdd, 0xb4, 0x75,
	0x4e, 0x7c, 0xf4, 0xcc, 0x77, 0xd0, 0xc9, 0x3f, 0x3e, 0xbe, 0x3d, 0x77, 0x37, 0x64, 0xad, 0xf0,
	0x73, 0xd5, 0x7f, 0x4c, 0xed, 0xce, 0x95, 0xf1, 0xe2, 0xe0, 0xea, 0xdf, 0xfb, 0xa7, 0xdd, 0xff,
	0xe6, 0x18, 0xac, 0xce, 0x30, 0x70, 0x69, 0xd4, 0xad, 0x3a, 0xa8, 0xe5, 0xfb, 0x09, 0x08, 0x67,
	0x3e, 0x62, 0x82, 0xc2, 0x71, 0x94, 0x30, 0x31, 0x00, 0x6a, 0x12, 0xb8, 0xc4, 0x39, 0x3d, 0xe2,
	0x26, 0x99, 0xab, 0x41, 0xf7, 0x13, 0xae, 0x29, 0x88, 0x38, 0x93, 0x5c, 0x18, 0xca, 0x35, 0x65,
	0xa9, 0x96, 0x34, 0xd7, 0xcf, 0x61, 0xba, 0x7b, 0xb0, 0x3d, 0x54, 0x91, 0xa1, 0x83, 0x47, 0x8f,
	0x2d, 0xc1, 0x36, 0xf9, 0xf8, 0x65, 0x04, 0x49, 0x13, 0x37, 0x6a, 0x6f, 0xbd, 0xd9, 0x8c, 0xe1,
	0x90, 0x0b, 0x3e, 0xf9, 0xd5, 0xcb, 0x4d, 0x72, 0x25, 0x01, 0x87, 0xfc, 0xe6, 0x96, 0xb7, 0x51,
	0xaf, 0x58, 0xea, 0xae, 0xdf, 0x19, 0xf6, 0x5a, 0xe9, 0xc4, 0x47, 0x0f, 0x9e, 0x2e, 0x9e, 0x76,
	0xff, 0x58, 0xc0, 0xa5, 0x4e, 0xd0, 0x22, 0x7f, 0x7a, 0xb8, 0x6c, 0x61, 0xd1, 0xee, 0x5e, 0x8f,
	0xfc, 0xe4, 0xf5, 0x04, 0x95, 0x2a, 0x06, 0x3b, 0x28, 0xe5, 0xc2, 0x80, 0x62, 0x91, 0x29, 0x5c,
	0xcb, 0x0c, 0xc4, 0x01, 0x13, 0x4f, 0xac, 0x50, 0x6f, 0x3a, 0x62, 0xc3, 0x5c, 0x1b, 0x7a, 0x50,
	0x80, 0x02, 0x61, 0x78, 0xc4, 0x0c, 0xc4, 0x13, 0x1c, 0xdd, 0xbd, 0x1e, 0xcd, 0x94, 0x1c, 0xf1,
	0x18, 0xb4, 0xa3, 0x69, 0x6f, 0x0b, 0xe2, 0x29, 0x26, 0xfd, 0xf2, 0x3b, 0xdb, 0x3c, 0x5b, 0x07,
	0x37, 0x94, 0x0d, 0x18, 0x17, 0xda, 0x5c, 0xa4, 0x4f, 0x99, 0x88, 0xa7, 0x88, 0x2f, 0x6e, 0xa6,
	0xb3, 0xd8, 0x0e, 0x5a, 0x41, 0xab, 0x5e, 0x6a, 0x8e, 0xda, 0x1b, 0x9e, 0xdf, 0x59, 0x66, 0x59,
	0x96, 0xda, 0x31, 0xb9, 0x14, 0xcd, 0x2f, 0xb4, 0x14, 0x5b, 0x73, 0x2f, 0x61, 0x1f, 0x97, 0xde,
	0x6e, 0xb5, 0xc8, 0x63, 0xfc, 0x59, 0x08, 0x26, 0x57, 0x02, 0x62, 0x7a, 0x64, 0x4f, 0xc4, 0x7a,
	0x50, 0x93, 0x5d, 0x1d, 0xc8, 0x78, 0x6c, 0xf7, 0x3c, 0x64, 0xe9, 0xa1, 0x54, 0x43, 0x66, 0xec,
	0xde, 0xa4, 0xa2, 0xb1, 0x04, 0x4d, 0x85, 0x34, 0x74, 0xc8, 0x4c, 0x94, 0xb8, 0x14, 0x38, 0xce,
	0x20, 0xb2, 0xe1, 0x49, 0x6e, 0x10, 0x7e, 0x64, 0x1b, 0xb4, 0xc9, 0x0e, 0xde, 0xbe, 0xba, 0xc1,
	0xb4, 0x50, 0x24, 0x85, 0xb1, 0xbe, 0x5d, 0x34, 0xd7, 0xa0, 0xd6, 0x35, 0x8d, 0x14, 0xc4, 0x16,
	0x37, 0x4b, 0x75, 0x10, 0xee, 0xd9, 0x6a, 0xf7, 0x49, 0x0f, 0xef, 0xce, 0x57, 0xb3, 0xfa, 0xb3,
	0x52, 0x09, 0x1b, 0x01, 0xcd, 0x40, 0x0d, 0xb9, 0xd6, 0x16, 0xb1, 0x91, 0x53, 0x58, 0xae, 0xb3,
	0x96, 0xb9, 0x8a, 0x20, 0x08, 0x1f, 0xe2, 0xd2, 0x3b, 0xad, 0x16, 0x79, 0x0f, 0xbf, 0x3b, 0x5b,
	0x91, 0x09, 0x9a, 0x8b, 0xa9, 0x1d, 0x50, 0x4a, 0x2a, 0x2a, 0xa3, 0x28, 0x57, 0xd6, 0x7b, 0xd1,
	0x50, 0x83, 0x1a, 0x81, 0xa2, 0x9a, 0xc7, 0x10, 0x7c, 0xe0, 0xed, 0xa1, 0xcf, 0xdd, 0x07, 0xfe,
	0x1b, 0x0f, 0x9d, 0x78, 0xe8, 0x99, 0x87, 0x7e, 0xf4, 0xd0, 0xaf, 0x1e, 0xfa, 0xd7, 0x43, 0x3f,
	0xfb, 0xe8, 0xe0, 0x9a, 0xfb, 0x60, 0xdf, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x01, 0x91, 0x14,
	0xce, 0x26, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthorizationServiceClient is the client API for AuthorizationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthorizationServiceClient interface {
	// GetAuthorizationCode creates an authorization code.
	GetAuthorizationCode(ctx context.Context, in *GetAuthorizationCodeRequest, opts ...grpc.CallOption) (*Empty, error)
	// CreateAccessToken exchanges an authorization code with an access token.
	CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error)
}

type authorizationServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthorizationServiceClient(cc *grpc.ClientConn) AuthorizationServiceClient {
	return &authorizationServiceClient{cc}
}

func (c *authorizationServiceClient) GetAuthorizationCode(ctx context.Context, in *GetAuthorizationCodeRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/auth.AuthorizationService/GetAuthorizationCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authorizationServiceClient) CreateAccessToken(ctx context.Context, in *CreateAccessTokenRequest, opts ...grpc.CallOption) (*CreateAccessTokenResponse, error) {
	out := new(CreateAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/auth.AuthorizationService/CreateAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthorizationServiceServer is the server API for AuthorizationService service.
type AuthorizationServiceServer interface {
	// GetAuthorizationCode creates an authorization code.
	GetAuthorizationCode(context.Context, *GetAuthorizationCodeRequest) (*Empty, error)
	// CreateAccessToken exchanges an authorization code with an access token.
	CreateAccessToken(context.Context, *CreateAccessTokenRequest) (*CreateAccessTokenResponse, error)
}

func RegisterAuthorizationServiceServer(s *grpc.Server, srv AuthorizationServiceServer) {
	s.RegisterService(&_AuthorizationService_serviceDesc, srv)
}

func _AuthorizationService_GetAuthorizationCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAuthorizationCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServiceServer).GetAuthorizationCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthorizationService/GetAuthorizationCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServiceServer).GetAuthorizationCode(ctx, req.(*GetAuthorizationCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthorizationService_CreateAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthorizationServiceServer).CreateAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthorizationService/CreateAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthorizationServiceServer).CreateAccessToken(ctx, req.(*CreateAccessTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthorizationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthorizationService",
	HandlerType: (*AuthorizationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAuthorizationCode",
			Handler:    _AuthorizationService_GetAuthorizationCode_Handler,
		},
		{
			MethodName: "CreateAccessToken",
			Handler:    _AuthorizationService_CreateAccessToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "command-line-arguments/all.proto",
}
